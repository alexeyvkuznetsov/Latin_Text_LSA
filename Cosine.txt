# compute cosine distance matrix
dist.mat.lsa.cosine <- dist(cosine(as.textmatrix(lsaSpace)))

# Plot the distance matrix:

fit <- cmdscale(dist.mat.lsa.cosine, eig=TRUE, k=2) # Classical (Metric) Multidimensional Scaling

points <- data.frame(x=fit$points[, 1], y=fit$points[, 2])

ggplot(points,aes(x=x, y=y)) + 
  geom_point(data=points,aes(x=x, y=y, color=historia$book)) + 
  geom_text(data=points,aes(x=x, y=y-0.1, label=row.names(historia)))

###





# Calculate Cosine Distance (LSA)
# compute distance matrix

lsa.mat.tfidf <- diag(lsaSpace$sk) %*% t(lsaSpace$dk)

#lsaMatrix <- diag(lsaSpace$sk) %*% t(lsaSpace$dk)

# Use the `cosine` function in `lsa` package to get cosine similarities matrix
# (subtract from 1 to get dissimilarity matrix)

fit <- lsa::cosine(lsa.mat.tfidf)

#SM <- as.matrix(cosine(lsaMatrix))

points <- data.frame(x=fit$points[, 1], y=fit$points[, 2])

#points <- data.frame(x=SM$points[, 1], y=SM$points[, 2])


ggplot(points,aes(x=x, y=y)) + 
  geom_point(data=points,aes(x=x, y=y, color=historia$book)) + 
  geom_text(data=points,aes(x=x, y=y-0.05, label=row.names(historia)))




https://github.com/tifaniwarnita/Document-Similarity/blob/97939d7733965ff322682e98850e426858588357/Document%20Similarity/doc-sim%20(cosine%20dist).R

# Creating Term Document Matrix
tdm.tf <- TermDocumentMatrix(corpus)
tdm.bin <- weightBin(tdm.tf)
tdm.tfidf <- weightTfIdf(tdm.tf, normalize = TRUE)

# Calculate Cosine Distance (Normal)
cosine.dist.bin <- crossprod_simple_triplet_matrix(tdm.bin)/(sqrt(col_sums(tdm.bin^2) %*% t(col_sums(tdm.bin^2))))
cosine.dist.tf <- crossprod_simple_triplet_matrix(tdm.tf)/(sqrt(col_sums(tdm.tf^2) %*% t(col_sums(tdm.tf^2))))
cosine.dist.tfidf <- crossprod_simple_triplet_matrix(tdm.tfidf)/(sqrt(col_sums(tdm.tfidf^2) %*% t(col_sums(tdm.tfidf^2))))

# Calculate Cosine Distance (LSA)
lsa.space.bin <- lsa(tdm.bin)
lsa.space.tf <- lsa(tdm.tf)
lsa.space.tfidf <- lsa(tdm.tfidf)
lsa.mat.bin <- diag(lsa.space.bin$sk) %*% t(lsa.space.bin$dk)
lsa.mat.tf <- diag(lsa.space.tf$sk) %*% t(lsa.space.tf$dk)
lsa.mat.tfidf <- diag(lsa.space.tfidf$sk) %*% t(lsa.space.tfidf$dk)
lsa.cosine.dist.bin <- lsa::cosine(lsa.mat.bin)
lsa.cosine.dist.tf <- lsa::cosine(lsa.mat.tf)
lsa.cosine.dist.tfidf <- lsa::cosine(lsa.mat.tfidf)

# Print Result
cosine.dist.bin
lsa.cosine.dist.bin
cosine.dist.tf
lsa.cosine.dist.tf
cosine.dist.tfidf
lsa.cosine.dist.tfidf